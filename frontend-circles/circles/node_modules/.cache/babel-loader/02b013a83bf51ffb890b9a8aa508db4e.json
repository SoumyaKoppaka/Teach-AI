{"ast":null,"code":"var _jsxFileName = \"/Users/dingsihan/Desktop/react/circles/src/App.js\";\nimport Animate from \"react-animate-x\"; // import { bounceOut } from \"eases\";\n\nimport Konva from \"konva\";\nimport { render } from \"react-dom\";\nimport { Stage, Layer, Rect, Text, Circle, Line } from \"react-konva\";\nimport { isTemplateElement } from \"@babel/types\";\nimport React, { Component } from \"react\";\n\nclass App extends Component {\n  componentDidMount() {\n    setInterval(() => {\n      fetch(\"http://localhost:5000/\").then(res => res.json()).then(data => {\n        if (this.state) {\n          this.setState({\n            prevState: this.state.location\n          }, () => {\n            console.log(this.state.location); // this.setState({location: data})\n            //outputs 42\n          });\n        }\n\n        this.setState({\n          location: data\n        });\n        console.log(this.state.location);\n      }).catch(console.log);\n    }, 1500);\n  }\n\n  render() {\n    // if (this.state) {\n    //   // console.log(this.state.location);\n    //   const item = this.state.location;\n    //   console.log(item);\n    // }\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Animate, {\n      from: {\n        x: this.state ? this.state.prevState.x : 0,\n        y: this.state ? this.state.prevState.y : 0\n      },\n      to: {\n        x: this.state ? 1200 - Number(this.state.location.x) + 30 : 300,\n        y: this.state ? 1200 - Number(this.state.location.y) + 30 : 300\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, ({\n      x,\n      y\n    }) => React.createElement(\"div\", {\n      style: {\n        transform: \"translate(\".concat(x, \"px, \").concat(y, \"px)\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Animating!\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dingsihan/Desktop/react/circles/src/App.js"],"names":["Animate","Konva","render","Stage","Layer","Rect","Text","Circle","Line","isTemplateElement","React","Component","App","componentDidMount","setInterval","fetch","then","res","json","data","state","setState","prevState","location","console","log","catch","x","y","Number","transform"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,iBAApB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,IAA7B,EAAmCC,MAAnC,EAA2CC,IAA3C,QAAuD,aAAvD;AACA,SAASC,iBAAT,QAAkC,cAAlC;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAC1BE,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,WAAW,CAAC,MAAM;AAChBC,MAAAA,KAAK,CAAC,wBAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAI;AAEZ,YAAI,KAAKC,KAAT,EAAgB;AACd,eAAKC,QAAL,CAAc;AAACC,YAAAA,SAAS,EAAE,KAAKF,KAAL,CAAWG;AAAvB,WAAd,EAAgD,MAAM;AACpDC,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWG,QAAvB,EADoD,CAEpD;AACF;AACC,WAJD;AAKD;;AAED,aAAKF,QAAL,CAAc;AAAEE,UAAAA,QAAQ,EAAEJ;AAAZ,SAAd;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWG,QAAvB;AACD,OAdH,EAeGG,KAfH,CAeSF,OAAO,CAACC,GAfjB;AAgBD,KAjBU,EAiBR,IAjBQ,CAAX;AAkBD;;AAEDvB,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AACA;AACA;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AACE,MAAA,IAAI,EAAE;AACJyB,QAAAA,CAAC,EAAG,KAAKP,KAAN,GAAgB,KAAKA,KAAL,CAAWE,SAAX,CAAqBK,CAArC,GAA2C,CAD1C;AAEJC,QAAAA,CAAC,EAAG,KAAKR,KAAN,GAAgB,KAAKA,KAAL,CAAWE,SAAX,CAAqBM,CAArC,GAA2C;AAF1C,OADR;AAKE,MAAA,EAAE,EAAE;AACFD,QAAAA,CAAC,EAAG,KAAKP,KAAN,GAAgB,OAAOS,MAAM,CAAC,KAAKT,KAAL,CAAWG,QAAX,CAAoBI,CAArB,CAAb,GAAqC,EAArD,GAA4D,GAD7D;AAEFC,QAAAA,CAAC,EAAG,KAAKR,KAAN,GAAgB,OAAOS,MAAM,CAAC,KAAKT,KAAL,CAAWG,QAAX,CAAoBK,CAArB,CAAb,GAAqC,EAArD,GAA4D;AAF7D,OALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUG,CAAC;AAAED,MAAAA,CAAF;AAAKC,MAAAA;AAAL,KAAD,KACC;AAAK,MAAA,KAAK,EAAE;AAAEE,QAAAA,SAAS,sBAAeH,CAAf,iBAAuBC,CAAvB;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXJ,CADF,CADF;AAoBD;;AAjDyB;;AAoD5B,eAAehB,GAAf","sourcesContent":["import Animate from \"react-animate-x\";\n// import { bounceOut } from \"eases\";\nimport Konva from \"konva\";\nimport { render } from \"react-dom\";\nimport { Stage, Layer, Rect, Text, Circle, Line } from \"react-konva\";\nimport { isTemplateElement } from \"@babel/types\";\n\nimport React, { Component } from \"react\";\n\nclass App extends Component {\n  componentDidMount() {\n    setInterval(() => {\n      fetch(\"http://localhost:5000/\")\n        .then(res => res.json())\n        .then(data => {\n          \n          if (this.state) {\n            this.setState({prevState: this.state.location}, () => {\n              console.log(this.state.location)\n              // this.setState({location: data})\n            //outputs 42\n            })\n          }\n\n          this.setState({ location: data });\n          console.log(this.state.location);\n        })\n        .catch(console.log);\n    }, 1500);\n  }\n\n  render() {\n    // if (this.state) {\n    //   // console.log(this.state.location);\n    //   const item = this.state.location;\n    //   console.log(item);\n    // }\n\n    return (\n      <div>\n        <Animate\n          from={{\n            x: (this.state) ? (this.state.prevState.x) : (0),\n            y: (this.state) ? (this.state.prevState.y) : (0)\n          }}\n          to={{\n            x: (this.state) ? (1200 - Number(this.state.location.x)+30) : (300),\n            y: (this.state) ? (1200 - Number(this.state.location.y)+30) : (300)\n          }}\n        >\n          {({ x, y }) => (\n            <div style={{ transform: `translate(${x}px, ${y}px)` }}>\n              Animating!\n            </div>\n          )}\n        </Animate>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}