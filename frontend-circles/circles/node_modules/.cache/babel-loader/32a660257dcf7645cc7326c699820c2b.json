{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _clone = require('clone');\n\nvar _clone2 = _interopRequireDefault(_clone);\n\nvar _rafLoop = require('raf-loop');\n\nvar _rafLoop2 = _interopRequireDefault(_rafLoop);\n\nvar _keyframeX = require('keyframe-x');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar Animate = function () {\n  function Animate(options) {\n    (0, _classCallCheck3.default)(this, Animate);\n    options = (0, _extends3.default)({}, defaultOptions, options);\n\n    for (var i in options) {\n      this[i] = options[i];\n    }\n\n    this.reset();\n    this.engine = (0, _rafLoop2.default)(this.step.bind(this));\n  }\n\n  (0, _createClass3.default)(Animate, [{\n    key: 'reset',\n    value: function reset() {\n      this.stop();\n      this.time = 0;\n      this.keyframe = (0, _keyframeX.tween)(this.from, this.to);\n      this.state = this.keyframe(0);\n      this.onStep(this.state);\n      return this;\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      this.reset();\n      this.animating = true;\n      this.engine.start();\n      return this;\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      this.animating = false;\n\n      if (this.engine) {\n        this.engine.stop();\n      }\n\n      return this;\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stop();\n      this.engine.stop();\n      return this;\n    }\n  }, {\n    key: 'unpause',\n    value: function unpause() {\n      this.animating = true;\n      this.engine.start();\n      return this;\n    }\n  }, {\n    key: 'step',\n    value: function step(delta) {\n      this.time += delta;\n\n      if (this.time >= this.duration) {\n        if (!this.loop) {\n          this.end();\n          return this;\n        } else {\n          this.time -= this.duration;\n        }\n      }\n\n      this.state = this.keyframe(this.easing(this.time / this.duration));\n      this.onStep(this.state);\n      return this;\n    }\n  }, {\n    key: 'end',\n    value: function end() {\n      this.stop();\n      this.state = this.keyframe(1);\n      this.onStep(this.state);\n      this.onEnd();\n      return this;\n    }\n  }, {\n    key: 'toggle',\n    value: function toggle() {\n      if (this.animating) {\n        this.stop();\n      } else {\n        this.start();\n      }\n\n      return this;\n    }\n  }, {\n    key: 'togglePause',\n    value: function togglePause() {\n      if (this.animating) {\n        this.pause();\n      } else {\n        this.unpause();\n      }\n\n      return this;\n    }\n  }]);\n  return Animate;\n}();\n\nvar defaultOptions = {\n  from: 0,\n  to: 100,\n  duration: 1000,\n  time: 0,\n  animating: false,\n  easing: function easing(t) {\n    return t;\n  },\n  onStart: noop,\n  onStep: noop,\n  onEnd: noop,\n  loop: false\n};\n\nfunction noop() {}\n\nexports.default = Animate;","map":null,"metadata":{},"sourceType":"script"}