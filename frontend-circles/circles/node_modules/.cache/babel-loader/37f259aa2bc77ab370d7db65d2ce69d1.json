{"ast":null,"code":"var _jsxFileName = \"/Users/dingsihan/Desktop/react/circles/src/App.js\";\nimport Animate from \"react-animate-x\"; // import { bounceOut } from \"eases\";\n\nimport Konva from \"konva\";\nimport { render } from \"react-dom\";\nimport { Stage, Layer, Rect, Text, Circle, Line } from \"react-konva\";\nimport { isTemplateElement } from \"@babel/types\";\nimport ls from 'local-storage';\nimport React, { Component } from \"react\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      if (this.state) {\n        this.setState({\n          oldState: this.state.location\n        });\n      }\n\n      fetch(\"http://localhost:5000/\").then(res => res.json()).then(data => {\n        // this.setState({ location: data });\n        // console.log(\"ASSIGNED CURRENT STATE\")\n        // console.log(this.state.location);\n        this.setState({\n          location: data\n        });\n      }).catch(console.log);\n    }, 1000);\n  } // this.oldState = this.state.location.x\n\n\n  render() {\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Animate, {\n      from: {\n        x: this.state ? 400 : 150,\n        y: this.state ? 400 : 150\n      },\n      to: {\n        x: this.state ? this.state.oldState.x : 300,\n        y: this.state ? this.state.location.y : 300\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, ({\n      x,\n      y\n    }) => React.createElement(\"div\", {\n      style: {\n        transform: \"translate(\".concat(x, \"px, \").concat(y, \"px)\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Animating!\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dingsihan/Desktop/react/circles/src/App.js"],"names":["Animate","Konva","render","Stage","Layer","Rect","Text","Circle","Line","isTemplateElement","ls","React","Component","App","constructor","props","componentDidMount","setInterval","state","setState","oldState","location","fetch","then","res","json","data","catch","console","log","x","y","transform"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,iBAApB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,IAA7B,EAAmCC,MAAnC,EAA2CC,IAA3C,QAAuD,aAAvD;AACA,SAASC,iBAAT,QAAkC,cAAlC;AACA,OAAOC,EAAP,MAAe,eAAf;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAC1BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,WAAW,CAAC,MAAM;AAChB,UAAI,KAAKC,KAAT,EAAgB;AACd,aAAKC,QAAL,CAAc;AAACC,UAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG;AAAtB,SAAd;AACD;;AAEDC,MAAAA,KAAK,CAAC,wBAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZ;AACA;AACA;AACA,aAAKP,QAAL,CAAc;AACZE,UAAAA,QAAQ,EAAEK;AADE,SAAd;AAGD,OATH,EAYGC,KAZH,CAYSC,OAAO,CAACC,GAZjB;AAaD,KAlBU,EAkBR,IAlBQ,CAAX;AAmBD,GAxByB,CA0B1B;;;AAEA3B,EAAAA,MAAM,GAAG;AACP0B,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAjB;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AACE,MAAA,IAAI,EAAE;AACJY,QAAAA,CAAC,EAAG,KAAKZ,KAAN,GAAgB,GAAhB,GAAwB,GADvB;AAEJa,QAAAA,CAAC,EAAG,KAAKb,KAAN,GAAgB,GAAhB,GAAwB;AAFvB,OADR;AAKE,MAAA,EAAE,EAAE;AACFY,QAAAA,CAAC,EAAG,KAAKZ,KAAN,GAAgB,KAAKA,KAAL,CAAWE,QAAX,CAAoBU,CAApC,GAA0C,GAD3C;AAEFC,QAAAA,CAAC,EAAG,KAAKb,KAAN,GAAgB,KAAKA,KAAL,CAAWG,QAAX,CAAoBU,CAApC,GAA0C;AAF3C,OALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUG,CAAC;AAAED,MAAAA,CAAF;AAAKC,MAAAA;AAAL,KAAD,KACC;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,sBAAeF,CAAf,iBAAuBC,CAAvB;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXJ,CADF,CADF;AAoBD;;AAnDyB;;AAsD5B,eAAelB,GAAf","sourcesContent":["import Animate from \"react-animate-x\";\n// import { bounceOut } from \"eases\";\nimport Konva from \"konva\";\nimport { render } from \"react-dom\";\nimport { Stage, Layer, Rect, Text, Circle, Line } from \"react-konva\";\nimport { isTemplateElement } from \"@babel/types\";\nimport ls from 'local-storage'\n\nimport React, { Component } from \"react\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n  }\n  componentDidMount() {\n    setInterval(() => {\n      if (this.state) {\n        this.setState({oldState: this.state.location})\n      }\n      \n      fetch(\"http://localhost:5000/\")\n        .then(res => res.json())\n        .then(data => {\n          // this.setState({ location: data });\n          // console.log(\"ASSIGNED CURRENT STATE\")\n          // console.log(this.state.location);\n          this.setState({\n            location: data \n          });\n        })\n        \n        \n        .catch(console.log);\n    }, 1000);\n  }\n\n  // this.oldState = this.state.location.x\n\n  render() {\n    console.log(this.state)\n    \n    return (\n      <div>\n        <Animate\n          from={{\n            x: (this.state) ? (400) : (150),\n            y: (this.state) ? (400) : (150)\n          }}\n          to={{\n            x: (this.state) ? (this.state.oldState.x) : (300),\n            y: (this.state) ? (this.state.location.y) : (300)\n          }}\n        >\n          {({ x, y }) => (\n            <div style={{ transform: `translate(${x}px, ${y}px)` }}>\n              Animating!\n            </div>\n          )}\n        </Animate>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}