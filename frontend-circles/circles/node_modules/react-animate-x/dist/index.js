'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _animateX = require('animate-x');

var _animateX2 = _interopRequireDefault(_animateX);

var _fastDeepEqual = require('fast-deep-equal');

var _fastDeepEqual2 = _interopRequireDefault(_fastDeepEqual);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ReactAnimate = function (_React$Component) {
	(0, _inherits3.default)(ReactAnimate, _React$Component);

	function ReactAnimate(props) {
		(0, _classCallCheck3.default)(this, ReactAnimate);

		var _this = (0, _possibleConstructorReturn3.default)(this, (ReactAnimate.__proto__ || Object.getPrototypeOf(ReactAnimate)).call(this, props));

		_this.state = {
			current: props.from,
			id: 0
		};
		return _this;
	}

	(0, _createClass3.default)(ReactAnimate, [{
		key: 'start',
		value: function start(props) {
			var _this2 = this;

			if (this.anim) {
				this.anim.stop();
			}
			if (props.animating === false) return;
			this.anim = new _animateX2.default((0, _extends3.default)({}, props, {
				onStep: function onStep(current) {
					_this2.setState({ current: current });
				}
			})).start();
		}
	}, {
		key: 'componentDidMount',
		value: function componentDidMount() {
			this.start(this.props);
		}
	}, {
		key: 'componentWillUnmount',
		value: function componentWillUnmount() {
			if (this.anim) {
				this.anim.stop();
			}
		}
	}, {
		key: 'componentWillReceiveProps',
		value: function componentWillReceiveProps(newProps) {
			if (!(0, _fastDeepEqual2.default)(this.props, newProps)) {
				this.start(newProps);
			}
		}
	}, {
		key: 'render',
		value: function render() {
			return this.props.children(this.state.current);
		}
	}]);
	return ReactAnimate;
}(_react2.default.Component);

exports.default = ReactAnimate;
module.exports = exports['default'];
//# sourceMappingURL=index.js.map